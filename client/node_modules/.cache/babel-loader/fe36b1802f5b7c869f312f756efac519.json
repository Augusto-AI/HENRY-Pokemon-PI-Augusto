{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Developer/Henry_Boorcamp/PI/HENRY-Pokemon-PI-Augusto-main/client/src/Components/Pagination/pagination.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import style from \"./pagination.module.css\";\n\n// export default function Pagination({ pokemonPerPage, allPokemon, paginado }) {\n//   const pageNumbers = [];\n\n//   for (let i = 1; i <= Math.ceil(allPokemon / pokemonPerPage); i++) {\n//     pageNumbers.push(i);\n//   }\n\n//   return (\n//     <nav className={style.pagnav }>\n//       <ul className={style.navul }>\n//         { pageNumbers &&\n//           pageNumbers.map(number =>(\n//             <li className={style.navli } key={number}>\n//               <a onClick={() => paginado(number)}>{number}</a>\n//             </li>\n//           ))}\n//       </ul>\n//     </nav>\n//   );\n// }\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport style from \"./pagination.module.css\";\nimport Card from \"../Card/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pagination({\n  pokemonPerPage,\n  allPokemon,\n  paginado,\n  currentPage\n}) {\n  _s();\n  const maxPagesToShow = 10;\n  const totalPages = Math.ceil(allPokemon / pokemonPerPage);\n  let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n  let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);\n  if (endPage - startPage + 1 < maxPagesToShow) {\n    startPage = Math.max(1, endPage - maxPagesToShow + 1);\n  }\n  const pageRange = [];\n  for (let i = startPage; i <= endPage; i++) {\n    pageRange.push(i);\n  }\n\n  // Aquí se manejan los datos filtrados\n  const searchedPokemonDetail = useSelector(state => state.pokemon // Cambiar esto según cómo has nombrado el estado en tu reducer\n  );\n\n  useEffect(() => {\n    // Cuando cambia el nombre buscado, llamamos a la acción para obtener los detalles\n    dispatch(getNamePokemon(searchName, currentPage));\n  }, [dispatch, searchName, currentPage]);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: style.pagnav,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: style.navul,\n      children: [currentPage > 1 && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: style.navli,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#!\",\n          onClick: () => paginado(currentPage - 1),\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), pageRange.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: style.navli,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#!\",\n          onClick: () => paginado(number),\n          className: style.pageNumber,\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)), currentPage < totalPages && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: style.navli,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#!\",\n          onClick: () => paginado(currentPage + 1),\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), currentPage !== 1 && searchedPokemonDetail && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.cardContainer,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/detail/${searchedPokemonDetail.id}`,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          name: searchedPokemonDetail.name,\n          img: searchedPokemonDetail.img,\n          types: searchedPokemonDetail.types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Pagination, \"xAjUdEy+3Wpb0aShK6Lf3YCUiHY=\", false, function () {\n  return [useSelector];\n});\n_c = Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useSelector","Link","style","Card","jsxDEV","_jsxDEV","Pagination","pokemonPerPage","allPokemon","paginado","currentPage","_s","maxPagesToShow","totalPages","Math","ceil","startPage","max","floor","endPage","min","pageRange","i","push","searchedPokemonDetail","state","pokemon","useEffect","dispatch","getNamePokemon","searchName","className","pagnav","children","navul","navli","href","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","number","pageNumber","cardContainer","to","id","name","img","types","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/Developer/Henry_Boorcamp/PI/HENRY-Pokemon-PI-Augusto-main/client/src/Components/Pagination/pagination.jsx"],"sourcesContent":["// import React from \"react\";\n// import style from \"./pagination.module.css\";\n\n// export default function Pagination({ pokemonPerPage, allPokemon, paginado }) {\n//   const pageNumbers = [];\n\n//   for (let i = 1; i <= Math.ceil(allPokemon / pokemonPerPage); i++) {\n//     pageNumbers.push(i);\n//   }\n\n//   return (\n//     <nav className={style.pagnav }>\n//       <ul className={style.navul }>\n//         { pageNumbers &&\n//           pageNumbers.map(number =>(\n//             <li className={style.navli } key={number}>\n//               <a onClick={() => paginado(number)}>{number}</a>\n//             </li>\n//           ))}\n//       </ul>\n//     </nav>\n//   );\n// }\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport style from \"./pagination.module.css\";\nimport Card from \"../Card/card\";\n\nexport default function Pagination({\n  pokemonPerPage,\n  allPokemon,\n  paginado,\n  currentPage,\n}) {\n  const maxPagesToShow = 10;\n  const totalPages = Math.ceil(allPokemon / pokemonPerPage);\n\n  let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n  let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);\n\n  if (endPage - startPage + 1 < maxPagesToShow) {\n    startPage = Math.max(1, endPage - maxPagesToShow + 1);\n  }\n\n  const pageRange = [];\n  for (let i = startPage; i <= endPage; i++) {\n    pageRange.push(i);\n  }\n\n  // Aquí se manejan los datos filtrados\n  const searchedPokemonDetail = useSelector(\n    (state) => state.pokemon // Cambiar esto según cómo has nombrado el estado en tu reducer\n  );\n\n  useEffect(() => {\n    // Cuando cambia el nombre buscado, llamamos a la acción para obtener los detalles\n    dispatch(getNamePokemon(searchName, currentPage));\n  }, [dispatch, searchName, currentPage]);\n\n  return (\n    <nav className={style.pagnav}>\n      <ul className={style.navul}>\n        {/* Botón de página anterior */}\n        {currentPage > 1 && (\n          <li className={style.navli}>\n            <a href=\"#!\" onClick={() => paginado(currentPage - 1)}>\n              {\"<\"}\n            </a>\n          </li>\n        )}\n\n        {/* Elementos de paginación */}\n        {pageRange.map((number) => (\n          <li className={style.navli} key={number}>\n            <a\n              href=\"#!\"\n              onClick={() => paginado(number)}\n              className={style.pageNumber}\n            >\n              {number}\n            </a>\n          </li>\n        ))}\n\n        {/* Botón de página siguiente */}\n        {currentPage < totalPages && (\n          <li className={style.navli}>\n            <a href=\"#!\" onClick={() => paginado(currentPage + 1)}>\n              {\">\"}\n            </a>\n          </li>\n        )}\n      </ul>\n\n      {/* Detalle de Pokémon en Otra Página */}\n      {currentPage !== 1 && searchedPokemonDetail && (\n        <div className={style.cardContainer}>\n          <Link to={`/detail/${searchedPokemonDetail.id}`}>\n            <Card\n              name={searchedPokemonDetail.name}\n              img={searchedPokemonDetail.img}\n              types={searchedPokemonDetail.types}\n            />\n          </Link>\n        </div>\n      )}\n    </nav>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}